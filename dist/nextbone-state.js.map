{"version":3,"file":"nextbone-state.js","sources":["../src/resource.js","../src/storage.js"],"sourcesContent":["import { Model, Collection } from 'nextbone'\r\nimport pathToRegexp from 'path-to-regexp'\r\n\r\nfunction getResourcePath (resourceDef, params = {}, resourceId) {\r\n  const toPath = pathToRegexp.compile(resourceDef.path)\r\n  let query = ''\r\n  let result = toPath(params)\r\n  if (resourceDef.params) {\r\n    resourceDef.params.forEach(paramDef => {\r\n      const paramValue = params[paramDef.name]\r\n      const isQuery = paramDef.location === 'query'\r\n      const isRequired = (typeof paramDef.required === 'undefined' && !isQuery) || paramDef.required === true\r\n      if (isRequired && paramValue == null) {\r\n        throw new Error(`Param ${paramDef.name} is not defined for resource ${resourceDef.name}`)\r\n      }\r\n      if (isQuery && paramValue != null) {\r\n        query += `${query ? '&' : ''}${encodeURIComponent(paramDef.name)}=${encodeURIComponent(paramValue)}`\r\n      }\r\n    })\r\n  }\r\n  if (resourceId) {\r\n    result = result.replace(/[^/]$/, '$&/') + encodeURIComponent(resourceId)\r\n  }\r\n  if (query) {\r\n    result += `?${query}`\r\n  }\r\n  return result\r\n}\r\n\r\nfunction findResourceDef (client, resource) {\r\n  const result = client.resourceDefs.find(def => def.name === resource)\r\n  if (!result) {\r\n    throw new Error(`Unable to find resource definition for ${resource}`)\r\n  }\r\n  return result\r\n}\r\n\r\nexport function createResourceSync (originalSync) {\r\n  return function resourceSync (method, model, options) {\r\n    const ctor = model.constructor\r\n    const resource = ctor.resource || (ctor.model && ctor.model.resource)\r\n    if (resource) {\r\n      let resourceId\r\n      const client = ctor.resourceClient || (model.collection && model.collection.constructor.resourceClient) || (ctor.model && ctor.model.resourceClient)\r\n      if (!client) {\r\n        throw new Error(`resourceClient not defined for ${ctor.name}${model.cid ? ` (${model.cid})` : ''}`)\r\n      }\r\n      const resourceDef = findResourceDef(client, resource)\r\n      if (model instanceof Model) {\r\n        const idAttribute = 'idAttribute' in resourceDef ? resourceDef.idAttribute : model.idAttribute\r\n        if (idAttribute) {\r\n          resourceId = model.get(idAttribute)\r\n        } else if (method === 'create') {\r\n          method = 'update'\r\n        }\r\n      }\r\n      options = options ? Object.assign({}, options) : {}\r\n      options.url = client.baseUrl + getResourcePath(resourceDef, model.params, resourceId)\r\n    }\r\n    return originalSync(method, model, options)\r\n  }\r\n}\r\n\r\nexport const paramsMixin = {\r\n  clearParams () {\r\n    this.params && (this.params = {})\r\n  },\r\n\r\n  setParam (name, value) {\r\n    this.params || (this.params = {})\r\n    this.params[name] = value\r\n  }\r\n}\r\n\r\nclass ResourceModel extends Model {}\r\nclass ResourceCollection extends Collection {}\r\nObject.assign(ResourceModel.prototype, paramsMixin)\r\nObject.assign(ResourceCollection.prototype, paramsMixin)\r\n\r\nexport {\r\n  ResourceModel,\r\n  ResourceCollection\r\n}\r\n","import { Collection, Model, Events } from 'nextbone'\r\n\r\n/**\r\n * A container for all the models of a particular type. Manages requests to your\r\n * server.\r\n * Original author: James Kyle <me@thejameskyle.com>\r\n * @example\r\n * var BookStorage = Storage.extend({\r\n *   model: Book,\r\n *   collection: Books\r\n * });\r\n * var bookStorage = new BookStorage();\r\n *\r\n * bookStorage.find(1).then(function(model) {\r\n *   model.doSomething();\r\n * });\r\n *\r\n * bookStorage.findAll().then(function(collection) {\r\n *   collection.doSomething();\r\n * });\r\n *\r\n * var book = new Book({ title: 'Lord of the Flies' });\r\n *\r\n * bookStorage.save(book).then(function() {\r\n *   book.isNew(); // false\r\n * });\r\n *\r\n * @public\r\n * @class Storage\r\n */\r\nclass Storage extends Events {\r\n\r\n  /**\r\n   * The model class to store.\r\n   * @type {Model}\r\n   */\r\n  static model = Model\r\n\r\n  /**\r\n   * The collection class to store.\r\n   * @type {Collection}\r\n   */\r\n  static collection = Collection\r\n\r\n  /**\r\n   * @public\r\n   * @constructs Storage\r\n   */\r\n  constructor () {\r\n    super()\r\n    this.records = new this.constructor.collection()\r\n    this.listenToOnce(this.records, 'sync', () => {\r\n      this._hasSynced = true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Find a specific model from the store or fetch it from the server and insert\r\n   * it into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method find\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Model} model - The model to find.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the model.\r\n   */\r\n  find (model, forceFetch = false) {\r\n    let record = this.records.get(model)\r\n\r\n    if (record && !forceFetch) {\r\n      return Promise.resolve(record)\r\n    } else {\r\n      model = this._ensureModel(model)\r\n      return Promise.resolve(model.fetch()).then(() => {\r\n        return this.insert(model)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find all the models in the store or fetch them from the server if they\r\n   * haven't been fetched before.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method findAll\r\n   * @memberOf Storage\r\n   * @param {Object} options - Options to pass to collection fetch. Also allows\r\n   * setting parameters on collection.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the entire collection.\r\n   */\r\n  findAll (options = {}, forceFetch = false) {\r\n    if (this._hasSynced && !forceFetch) {\r\n      return Promise.resolve(this.records)\r\n    } else {\r\n      return Promise.resolve(this.records.fetch(options)).then(() => {\r\n        return this.records\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save a model to the server.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method save\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Model} model - The model to save\r\n   * @returns {Promise} - A promise that will resolve to the saved model.\r\n   */\r\n  save (model, options) {\r\n    let attributes\r\n    let record = this.records.get(model)\r\n    if (record) {\r\n      if (typeof model === 'object' && record !== model) {\r\n        attributes = model instanceof this.constructor.model ? model.attributes : model\r\n      }\r\n      model = record\r\n    } else {\r\n      model = this._ensureModel(model)\r\n    }\r\n    return Promise.resolve(model.save(attributes, options)).then(() => {\r\n      if (!record) {\r\n        this.insert(model)\r\n      }\r\n      return model\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Insert a model into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method insert\r\n   * @memberOf Storage\r\n   * @params {Object|Model} - The model to add.\r\n   * @returns {Promise} - A promise that will resolve to the added model.\r\n   */\r\n  insert (model) {\r\n    model = this.records.add(model, { merge: true })\r\n    return Promise.resolve(model)\r\n  }\r\n\r\n  /**\r\n   * Ensure that we have a real model from an id, object, or model.\r\n   *\r\n   * @private\r\n   * @instance\r\n   * @method _ensureModel\r\n   * @memberOf Storage\r\n   * @params {Number|String|Object|Model} - An id, object, or model.\r\n   * @returns {Model} - The model.\r\n   */\r\n  _ensureModel (model) {\r\n    const ModelClass = this.constructor.model\r\n    if (model instanceof ModelClass) {\r\n      return model\r\n    } else if (typeof model === 'object') {\r\n      return new ModelClass(model)\r\n    } else {\r\n      return new ModelClass({ id: model })\r\n    }\r\n  }\r\n}\r\n\r\nexport default Storage\r\n"],"names":["getResourcePath","resourceDef","params","resourceId","toPath","pathToRegexp","compile","path","query","result","forEach","paramDef","paramValue","name","isQuery","location","isRequired","required","Error","encodeURIComponent","replace","findResourceDef","client","resource","resourceDefs","find","def","createResourceSync","originalSync","resourceSync","method","model","options","ctor","constructor","resourceClient","collection","cid","Model","idAttribute","get","Object","assign","url","baseUrl","paramsMixin","clearParams","setParam","value","ResourceModel","ResourceCollection","Collection","prototype","Storage","Events","records","listenToOnce","_hasSynced","forceFetch","record","Promise","resolve","_ensureModel","fetch","then","insert","findAll","save","attributes","add","merge","ModelClass","id"],"mappings":"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"}