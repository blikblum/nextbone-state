{"version":3,"file":"nextbone-state.js","sources":["../src/resource.js","../src/storage.js"],"sourcesContent":["import { Model, Collection } from 'nextbone'\r\nimport { extend } from 'underscore'\r\nimport pathToRegexp from 'path-to-regexp-es'\r\n\r\nfunction getResourcePath(resourceDef, params = {}, resourceId) {\r\n  const toPath = pathToRegexp.compile(resourceDef.path)\r\n  let query = ''\r\n  if (resourceDef.params) {\r\n    resourceDef.params.forEach(paramDef => {\r\n      const paramValue = params[paramDef.name]\r\n      const isQuery = paramDef.location === 'query'\r\n      const isRequired =\r\n        (typeof paramDef.required === 'undefined' && !isQuery) || paramDef.required === true\r\n      if (isRequired && paramValue == null) {\r\n        throw new Error(`Param ${paramDef.name} is not defined for resource ${resourceDef.name}`)\r\n      }\r\n      if (isQuery && paramValue != null) {\r\n        query += `${query ? '&' : ''}${encodeURIComponent(paramDef.name)}=${encodeURIComponent(\r\n          paramValue\r\n        )}`\r\n      }\r\n    })\r\n  }\r\n  let result = toPath(params)\r\n  if (resourceId) {\r\n    result = result.replace(/[^/]$/, '$&/') + encodeURIComponent(resourceId)\r\n  }\r\n  if (query) {\r\n    result += `?${query}`\r\n  }\r\n  return result\r\n}\r\n\r\nfunction findResourceDef(client, resource) {\r\n  const result = client.resourceDefs.find(def => def.name === resource)\r\n  if (!result) {\r\n    throw new Error(`Unable to find resource definition for ${resource}`)\r\n  }\r\n  return result\r\n}\r\n\r\nexport function createResourceSync(originalSync) {\r\n  return function resourceSync(method, model, options) {\r\n    const ctor = model.constructor\r\n    const resource = ctor.resource || (ctor.model && ctor.model.resource)\r\n    if (resource) {\r\n      let resourceId\r\n      const client =\r\n        ctor.resourceClient ||\r\n        (model.collection && model.collection.constructor.resourceClient) ||\r\n        (ctor.model && ctor.model.resourceClient)\r\n      if (!client) {\r\n        throw new Error(\r\n          `resourceClient not defined for ${ctor.name}${model.cid ? ` (${model.cid})` : ''}`\r\n        )\r\n      }\r\n      const resourceDef = findResourceDef(client, resource)\r\n      if (model instanceof Model) {\r\n        const idAttribute =\r\n          'idAttribute' in resourceDef ? resourceDef.idAttribute : model.idAttribute\r\n        if (idAttribute) {\r\n          resourceId = model.get(idAttribute)\r\n        } else if (method === 'create') {\r\n          method = 'update'\r\n        }\r\n      }\r\n      options = options ? Object.assign({}, options) : {}\r\n      const params = model.collection\r\n        ? extend({}, model.collection.params, model.params)\r\n        : model.params\r\n      options.url = client.baseUrl + getResourcePath(resourceDef, params, resourceId)\r\n    }\r\n    return originalSync(method, model, options)\r\n  }\r\n}\r\n\r\nexport const paramsMixin = {\r\n  clearParams() {\r\n    this.params && (this.params = {})\r\n  },\r\n\r\n  setParam(name, value) {\r\n    this.params || (this.params = {})\r\n    this.params[name] = value\r\n  }\r\n}\r\n\r\nclass ResourceModel extends Model {}\r\nclass ResourceCollection extends Collection {}\r\nObject.assign(ResourceModel.prototype, paramsMixin)\r\nObject.assign(ResourceCollection.prototype, paramsMixin)\r\n\r\nexport { ResourceModel, ResourceCollection }\r\n","import { Collection, Model, Events } from 'nextbone'\r\n\r\n/**\r\n * A container for all the models of a particular type. Manages requests to your\r\n * server.\r\n * @example\r\n * class BookStorage extends Storage {\r\n *   static model = Book\r\n *   static collection = Books\r\n * };\r\n * var bookStorage = new BookStorage();\r\n *\r\n * bookStorage.find(1).then(function(model) {\r\n *   model.doSomething();\r\n * });\r\n *\r\n * bookStorage.findAll().then(function(collection) {\r\n *   collection.doSomething();\r\n * });\r\n *\r\n * var book = new Book({ title: 'Lord of the Flies' });\r\n *\r\n * bookStorage.save(book).then(function() {\r\n *   book.isNew(); // false\r\n * });\r\n *\r\n * @public\r\n * @class Storage\r\n */\r\nclass Storage extends Events {\r\n  /**\r\n   * The model class to store.\r\n   * @type {Model}\r\n   */\r\n  static model = Model\r\n\r\n  /**\r\n   * The collection class to store.\r\n   * @type {Collection}\r\n   */\r\n  static collection = Collection\r\n\r\n  /**\r\n   * @public\r\n   * @constructs Storage\r\n   */\r\n  constructor() {\r\n    super()\r\n    this.records = new this.constructor.collection()\r\n    this.listenToOnce(this.records, 'sync', () => {\r\n      this._hasSynced = true\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Find a specific model from the store or fetch it from the server and insert\r\n   * it into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method find\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Model} model - The model to find.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the model.\r\n   */\r\n  find(model, forceFetch = false) {\r\n    let record = this.records.get(model)\r\n\r\n    if (record && !forceFetch) {\r\n      return Promise.resolve(record)\r\n    } else {\r\n      model = this._ensureModel(model)\r\n      return Promise.resolve(model.fetch()).then(() => {\r\n        return this.insert(model)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Find all the models in the store or fetch them from the server if they\r\n   * haven't been fetched before.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method findAll\r\n   * @memberOf Storage\r\n   * @param {Object} options - Options to pass to collection fetch. Also allows\r\n   * setting parameters on collection.\r\n   * @param {Boolean} forceFetch - Force fetch model from server.\r\n   * @returns {Promise} - A promise that will resolve to the entire collection.\r\n   */\r\n  findAll(options = {}, forceFetch = false) {\r\n    if (this._hasSynced && !forceFetch) {\r\n      return Promise.resolve(this.records)\r\n    } else {\r\n      return Promise.resolve(this.records.fetch(options)).then(() => {\r\n        return this.records\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save a model to the server.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method save\r\n   * @memberOf Storage\r\n   * @param {Number|String|Object|Model} model - The model to save\r\n   * @returns {Promise} - A promise that will resolve to the saved model.\r\n   */\r\n  save(model, options) {\r\n    let attributes\r\n    let record = this.records.get(model)\r\n    if (record) {\r\n      if (typeof model === 'object' && record !== model) {\r\n        attributes = model instanceof this.constructor.model ? model.attributes : model\r\n      }\r\n      model = record\r\n    } else {\r\n      model = this._ensureModel(model)\r\n    }\r\n    return Promise.resolve(model.save(attributes, options)).then(() => {\r\n      if (!record) {\r\n        this.insert(model)\r\n      }\r\n      return model\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Insert a model into the store.\r\n   *\r\n   * @public\r\n   * @instance\r\n   * @method insert\r\n   * @memberOf Storage\r\n   * @params {Object|Model} - The model to add.\r\n   * @returns {Promise} - A promise that will resolve to the added model.\r\n   */\r\n  insert(model) {\r\n    model = this.records.add(model, { merge: true })\r\n    return Promise.resolve(model)\r\n  }\r\n\r\n  /**\r\n   * Ensure that we have a real model from an id, object, or model.\r\n   *\r\n   * @private\r\n   * @instance\r\n   * @method _ensureModel\r\n   * @memberOf Storage\r\n   * @params {Number|String|Object|Model} - An id, object, or model.\r\n   * @returns {Model} - The model.\r\n   */\r\n  _ensureModel(model) {\r\n    const ModelClass = this.constructor.model\r\n    if (model instanceof ModelClass) {\r\n      return model\r\n    } else if (typeof model === 'object') {\r\n      return new ModelClass(model)\r\n    } else {\r\n      return new ModelClass({ id: model })\r\n    }\r\n  }\r\n}\r\n\r\nexport default Storage\r\n"],"names":["getResourcePath","resourceDef","params","resourceId","toPath","pathToRegexp","compile","path","query","forEach","paramDef","paramValue","name","isQuery","location","isRequired","required","Error","encodeURIComponent","result","replace","findResourceDef","client","resource","resourceDefs","find","def","createResourceSync","originalSync","resourceSync","method","model","options","ctor","constructor","resourceClient","collection","cid","Model","idAttribute","get","Object","assign","extend","url","baseUrl","paramsMixin","clearParams","setParam","value","ResourceModel","ResourceCollection","Collection","prototype","Storage","Events","records","listenToOnce","_hasSynced","forceFetch","record","Promise","resolve","_ensureModel","fetch","then","insert","findAll","save","attributes","add","merge","ModelClass","id"],"mappings":"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"}